{"ast":null,"code":"var _jsxFileName = \"/Users/ipadurean79/Desktop/coding/MODULE4/lutrivia-react-chicago-web-062419/lutrivia/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header';\nimport QuestionsList from './components/QuestionsList';\nimport ScoreForm from './components/ScoreForm';\nimport data from './data';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.incrementScore = () => {\n      this.setState(prevState => {\n        return {\n          counter: prevState.counter += 1\n        };\n      });\n    };\n\n    this.updateName = newName => {\n      return this.setState({\n        name: newName\n      });\n    };\n\n    this.submitName = prevState => {\n      return this.setState({});\n    };\n\n    this.state = {\n      counter: 0,\n      name: \"\",\n      finalName: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Header, {\n      name: this.submitName,\n      totalScore: this.state.counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(QuestionsList, {\n      incrementScore: this.incrementScore,\n      questions: data.questions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(ScoreForm, {\n      submitName: this.submitName,\n      addName: this.updateName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ipadurean79/Desktop/coding/MODULE4/lutrivia-react-chicago-web-062419/lutrivia/src/App.js"],"names":["React","Header","QuestionsList","ScoreForm","data","App","Component","constructor","incrementScore","setState","prevState","counter","updateName","newName","name","submitName","state","finalName","render","questions"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,cATc,GASG,MAAM;AACrB,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AAACC,UAAAA,OAAO,EAAED,SAAS,CAACC,OAAV,IAAqB;AAA/B,SAAP;AACD,OAFD;AAGD,KAba;;AAAA,SAedC,UAfc,GAeAC,OAAD,IAAa;AACxB,aAAO,KAAKJ,QAAL,CAAc;AAACK,QAAAA,IAAI,EAAED;AAAP,OAAd,CAAP;AACD,KAjBa;;AAAA,SAmBdE,UAnBc,GAmBDL,SAAD,IAAe;AACzB,aAAO,KAAKD,QAAL,CAAc,EAAd,CAAP;AACD,KArBa;;AAEZ,SAAKO,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE,CADE;AAEXG,MAAAA,IAAI,EAAE,EAFK;AAGXG,MAAAA,SAAS,EAAE;AAHA,KAAb;AAKD;;AAgBDC,EAAAA,MAAM,GAAE;AACJ,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKH,UAAnB;AAA+B,MAAA,UAAU,EAAE,KAAKC,KAAL,CAAWL,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AAAe,MAAA,cAAc,EAAE,KAAKH,cAApC;AAAoD,MAAA,SAAS,EAAEJ,IAAI,CAACe,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAW,MAAA,UAAU,EAAE,KAAKJ,UAA5B;AAAwC,MAAA,OAAO,EAAE,KAAKH,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAOH;;AAjC+B;;AAoClC,eAAeP,GAAf","sourcesContent":["import React from 'react';\n\nimport Header from './components/Header';\nimport QuestionsList from './components/QuestionsList';\nimport ScoreForm from './components/ScoreForm';\nimport data from './data'\n\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n    this.state = {\n      counter: 0,\n      name: \"\",\n      finalName: \"\"\n    }\n  }\n\n  incrementScore = () => { \n    this.setState((prevState) => {\n      return {counter: prevState.counter += 1}\n    })\n  }\n\n  updateName = (newName) => {\n    return this.setState({name: newName})\n  }\n\n  submitName= (prevState) => {\n    return this.setState({})\n  }\n  \n  render(){\n      return (\n        <div>\n          <Header name={this.submitName} totalScore={this.state.counter}/>\n          <QuestionsList incrementScore={this.incrementScore} questions={data.questions}/>\n          <ScoreForm submitName={this.submitName} addName={this.updateName} />\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}