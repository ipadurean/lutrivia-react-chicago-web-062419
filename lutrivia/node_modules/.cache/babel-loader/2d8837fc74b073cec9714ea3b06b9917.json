{"ast":null,"code":"var _jsxFileName = \"/Users/ipadurean79/Desktop/coding/MODULE4/lutrivia-react-chicago-web-062419/lutrivia/src/components/Question.js\";\nimport React from 'react';\n\nclass Question extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = event => {\n      event.persist();\n\n      if (this.state.answeredCorrectly !== null) {\n        this.setState({\n          answeredCorrectly: this.props.answer + \"\" === event.target.value ? true : false\n        }, () => {\n          return this.state.answeredCorrectly ? event.target.style.background = \"green\" : event.target.style.background = \"red\";\n        });\n      } else {\n        alert('you cant vote twice stupid');\n      }\n    };\n\n    this.state = {\n      answeredCorrectly: null\n    };\n  } // btnColor = (event) => this.props.answer+\"\" === event.target.value? {background: '#FF5733'} : {background: '#DAF7A6'}\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"question-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.text), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"true\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"True\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"false\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"False\"));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/ipadurean79/Desktop/coding/MODULE4/lutrivia-react-chicago-web-062419/lutrivia/src/components/Question.js"],"names":["React","Question","Component","constructor","handleClick","event","persist","state","answeredCorrectly","setState","props","answer","target","value","style","background","alert","render","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SASdC,WATc,GASAC,KAAK,IAAI;AACrBA,MAAAA,KAAK,CAACC,OAAN;;AACA,UAAI,KAAKC,KAAL,CAAWC,iBAAX,KAAiC,IAArC,EAA2C;AACzC,aAAKC,QAAL,CAAc;AACZD,UAAAA,iBAAiB,EAAE,KAAKE,KAAL,CAAWC,MAAX,GAAoB,EAApB,KAA2BN,KAAK,CAACO,MAAN,CAAaC,KAAxC,GAAgD,IAAhD,GAAuD;AAD9D,SAAd,EAEG,MAAM;AACP,iBAAO,KAAKN,KAAL,CAAWC,iBAAX,GAA+BH,KAAK,CAACO,MAAN,CAAaE,KAAb,CAAmBC,UAAnB,GAAgC,OAA/D,GAAyEV,KAAK,CAACO,MAAN,CAAaE,KAAb,CAAmBC,UAAnB,GAAgC,KAAhH;AACD,SAJD;AAKD,OAND,MAMO;AACLC,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF,KApBa;;AAEZ,SAAKT,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAGD,GANoC,CAQrC;;;AAeAS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWQ,IAAhB,CADF,EAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,KAAKd,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAE6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7E,EAGE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,OAA5B;AAAoC,MAAA,OAAO,EAAE,KAAKA,WAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD;;AA/BoC;;AAkCvC,eAAeH,QAAf","sourcesContent":["import React from 'react';\n\n\nclass Question extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      answeredCorrectly: null\n    }\n  }\n\n  // btnColor = (event) => this.props.answer+\"\" === event.target.value? {background: '#FF5733'} : {background: '#DAF7A6'}\n\n  handleClick = event => {\n    event.persist();\n    if (this.state.answeredCorrectly !== null) {\n      this.setState({\n        answeredCorrectly: this.props.answer + \"\" === event.target.value ? true : false,\n      }, () => {\n        return this.state.answeredCorrectly ? event.target.style.background = \"green\" : event.target.style.background = \"red\"\n      });\n    } else {\n      alert('you cant vote twice stupid');\n    }\n  }\n\n  render() {\n    return (\n      <div className='question-frame'>\n        <h2>{this.props.text}</h2>\n        <button type=\"button\" value='true' onClick={this.handleClick}>True</button><span />\n        <button type=\"button\" value='false' onClick={this.handleClick}>False</button>\n      </div>\n    )\n  }\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}