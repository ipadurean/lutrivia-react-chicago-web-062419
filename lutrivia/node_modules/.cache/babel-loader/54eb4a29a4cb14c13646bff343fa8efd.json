{"ast":null,"code":"var _jsxFileName = \"/Users/ipadurean79/Desktop/coding/MODULE4/lutrivia-react-chicago-web-062419/lutrivia/src/components/Question.js\";\nimport React from 'react';\n\nclass Question extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.btnColor = event => {\n      this.props.answer + \"\" === event.target.value ? {\n        background: '#FF5733'\n      } : {\n        background: '#DAF7A6'\n      };\n    };\n\n    this.validateAnswer = event => btnColor();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"question-frame\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.text), React.createElement(\"button\", {\n      styletype: \"button\",\n      value: \"true\",\n      onClick: this.validateAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"True\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      value: \"false\",\n      onClick: this.validateAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"False\"));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["/Users/ipadurean79/Desktop/coding/MODULE4/lutrivia-react-chicago-web-062419/lutrivia/src/components/Question.js"],"names":["React","Question","Component","btnColor","event","props","answer","target","value","background","validateAnswer","render","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAKrCC,QALqC,GAK1BC,KAAK,IAAI;AAAC,WAAKC,KAAL,CAAWC,MAAX,GAAkB,EAAlB,KAAyBF,KAAK,CAACG,MAAN,CAAaC,KAAtC,GAA6C;AAACC,QAAAA,UAAU,EAAE;AAAb,OAA7C,GAAuE;AAACA,QAAAA,UAAU,EAAE;AAAb,OAAvE;AAA+F,KAL/E;;AAAA,SAMrCC,cANqC,GAMpBN,KAAK,IAAKD,QAAQ,EANE;AAAA;;AAStCQ,EAAAA,MAAM,GAAG;AAEP,WACG;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWO,IAAhB,CADF,EAEE;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA6B,MAAA,KAAK,EAAC,MAAnC;AAA0C,MAAA,OAAO,EAAE,KAAKF,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAEuF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvF,EAGE;AAAS,MAAA,IAAI,EAAC,QAAd;AAAwB,MAAA,KAAK,EAAC,OAA9B;AAAsC,MAAA,OAAO,EAAE,KAAKA,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADH;AAOA;;AAlBoC;;AAqBvC,eAAeT,QAAf","sourcesContent":["import React from 'react';\n\n\nclass Question extends React.Component {\n\n  \n\n  \n  btnColor = event => {this.props.answer+\"\" === event.target.value? {background: '#FF5733'} : {background: '#DAF7A6'}}\n  validateAnswer = event => (btnColor())\n\n \n render() {\n    \n   return(\n      <div className= 'question-frame'>\n        <h2>{this.props.text}</h2>\n        <button  styletype=\"button\"  value='true' onClick={this.validateAnswer}>True</button><span/>\n        <button  type=\"button\"  value='false' onClick={this.validateAnswer}>False</button>\n      </div>\n    )\n  }\n}\n\nexport default Question;"]},"metadata":{},"sourceType":"module"}